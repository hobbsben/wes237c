-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity top is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    real_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_sample_ce0 : OUT STD_LOGIC;
    real_sample_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_we0 : OUT STD_LOGIC;
    real_sample_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    real_sample_ce1 : OUT STD_LOGIC;
    real_sample_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    real_sample_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    real_sample_we1 : OUT STD_LOGIC;
    imag_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    imag_sample_ce0 : OUT STD_LOGIC;
    imag_sample_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_we0 : OUT STD_LOGIC;
    imag_sample_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    imag_sample_ce1 : OUT STD_LOGIC;
    imag_sample_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    imag_sample_we1 : OUT STD_LOGIC;
    dft_real_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dft_real_ce0 : OUT STD_LOGIC;
    dft_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dft_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dft_real_we0 : OUT STD_LOGIC;
    dft_real_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dft_real_ce1 : OUT STD_LOGIC;
    dft_real_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dft_real_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dft_real_we1 : OUT STD_LOGIC;
    dft_imag_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dft_imag_ce0 : OUT STD_LOGIC;
    dft_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dft_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dft_imag_we0 : OUT STD_LOGIC;
    dft_imag_address1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    dft_imag_ce1 : OUT STD_LOGIC;
    dft_imag_d1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dft_imag_q1 : IN STD_LOGIC_VECTOR (31 downto 0);
    dft_imag_we1 : OUT STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "top,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.424000,HLS_SYN_LAT=1115141,HLS_SYN_TPT=557314,HLS_SYN_MEM=8,HLS_SYN_DSP=32,HLS_SYN_FF=2916,HLS_SYN_LUT=4955}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal Stage1_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage1_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage1_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage1_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage2_real_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage2_real_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage2_imag_i_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal Stage2_imag_t_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dft1_U0_ap_start : STD_LOGIC;
    signal dft1_U0_ap_done : STD_LOGIC;
    signal dft1_U0_ap_continue : STD_LOGIC;
    signal dft1_U0_ap_idle : STD_LOGIC;
    signal dft1_U0_ap_ready : STD_LOGIC;
    signal dft1_U0_real_sample_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft1_U0_real_sample_ce0 : STD_LOGIC;
    signal dft1_U0_imag_sample_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft1_U0_imag_sample_ce0 : STD_LOGIC;
    signal dft1_U0_dft_real_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft1_U0_dft_real_ce0 : STD_LOGIC;
    signal dft1_U0_dft_real_we0 : STD_LOGIC;
    signal dft1_U0_dft_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dft1_U0_dft_imag_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft1_U0_dft_imag_ce0 : STD_LOGIC;
    signal dft1_U0_dft_imag_we0 : STD_LOGIC;
    signal dft1_U0_dft_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_Stage1_imag : STD_LOGIC;
    signal dft1_U0_dft_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage1_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage1_imag : STD_LOGIC;
    signal ap_channel_done_Stage1_real : STD_LOGIC;
    signal dft1_U0_dft_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage1_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage1_real : STD_LOGIC;
    signal dft2_U0_ap_start : STD_LOGIC;
    signal dft2_U0_ap_done : STD_LOGIC;
    signal dft2_U0_ap_continue : STD_LOGIC;
    signal dft2_U0_ap_idle : STD_LOGIC;
    signal dft2_U0_ap_ready : STD_LOGIC;
    signal dft2_U0_real_sample_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft2_U0_real_sample_ce0 : STD_LOGIC;
    signal dft2_U0_imag_sample_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft2_U0_imag_sample_ce0 : STD_LOGIC;
    signal dft2_U0_dft_real_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft2_U0_dft_real_ce0 : STD_LOGIC;
    signal dft2_U0_dft_real_we0 : STD_LOGIC;
    signal dft2_U0_dft_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dft2_U0_dft_imag_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft2_U0_dft_imag_ce0 : STD_LOGIC;
    signal dft2_U0_dft_imag_we0 : STD_LOGIC;
    signal dft2_U0_dft_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_channel_done_Stage2_imag : STD_LOGIC;
    signal dft2_U0_dft_imag_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage2_imag : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage2_imag : STD_LOGIC;
    signal ap_channel_done_Stage2_real : STD_LOGIC;
    signal dft2_U0_dft_real_full_n : STD_LOGIC;
    signal ap_sync_reg_channel_write_Stage2_real : STD_LOGIC := '0';
    signal ap_sync_channel_write_Stage2_real : STD_LOGIC;
    signal dft3_U0_ap_start : STD_LOGIC;
    signal dft3_U0_ap_done : STD_LOGIC;
    signal dft3_U0_ap_continue : STD_LOGIC;
    signal dft3_U0_ap_idle : STD_LOGIC;
    signal dft3_U0_ap_ready : STD_LOGIC;
    signal dft3_U0_real_sample_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft3_U0_real_sample_ce0 : STD_LOGIC;
    signal dft3_U0_imag_sample_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft3_U0_imag_sample_ce0 : STD_LOGIC;
    signal dft3_U0_dft_real_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft3_U0_dft_real_ce0 : STD_LOGIC;
    signal dft3_U0_dft_real_we0 : STD_LOGIC;
    signal dft3_U0_dft_real_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dft3_U0_dft_imag_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dft3_U0_dft_imag_ce0 : STD_LOGIC;
    signal dft3_U0_dft_imag_we0 : STD_LOGIC;
    signal dft3_U0_dft_imag_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sync_continue : STD_LOGIC;
    signal Stage1_real_i_full_n : STD_LOGIC;
    signal Stage1_real_t_empty_n : STD_LOGIC;
    signal Stage1_imag_i_full_n : STD_LOGIC;
    signal Stage1_imag_t_empty_n : STD_LOGIC;
    signal Stage2_real_i_full_n : STD_LOGIC;
    signal Stage2_real_t_empty_n : STD_LOGIC;
    signal Stage2_imag_i_full_n : STD_LOGIC;
    signal Stage2_imag_t_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal dft1_U0_start_full_n : STD_LOGIC;
    signal dft1_U0_start_write : STD_LOGIC;
    signal dft2_U0_start_full_n : STD_LOGIC;
    signal dft2_U0_start_write : STD_LOGIC;
    signal dft3_U0_start_full_n : STD_LOGIC;
    signal dft3_U0_start_write : STD_LOGIC;

    component dft1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        real_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        real_sample_ce0 : OUT STD_LOGIC;
        real_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        imag_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        imag_sample_ce0 : OUT STD_LOGIC;
        imag_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dft_real_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dft_real_ce0 : OUT STD_LOGIC;
        dft_real_we0 : OUT STD_LOGIC;
        dft_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dft_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dft_imag_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dft_imag_ce0 : OUT STD_LOGIC;
        dft_imag_we0 : OUT STD_LOGIC;
        dft_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dft_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        real_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        real_sample_ce0 : OUT STD_LOGIC;
        real_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        imag_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        imag_sample_ce0 : OUT STD_LOGIC;
        imag_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dft_real_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dft_real_ce0 : OUT STD_LOGIC;
        dft_real_we0 : OUT STD_LOGIC;
        dft_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dft_real_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dft_imag_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dft_imag_ce0 : OUT STD_LOGIC;
        dft_imag_we0 : OUT STD_LOGIC;
        dft_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dft_imag_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component dft3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        real_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        real_sample_ce0 : OUT STD_LOGIC;
        real_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        imag_sample_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        imag_sample_ce0 : OUT STD_LOGIC;
        imag_sample_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dft_real_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dft_real_ce0 : OUT STD_LOGIC;
        dft_real_we0 : OUT STD_LOGIC;
        dft_real_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dft_imag_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dft_imag_ce0 : OUT STD_LOGIC;
        dft_imag_we0 : OUT STD_LOGIC;
        dft_imag_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component top_Stage1_real IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        i_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        i_ce0 : IN STD_LOGIC;
        i_we0 : IN STD_LOGIC;
        i_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        i_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        t_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t_ce0 : IN STD_LOGIC;
        t_we0 : IN STD_LOGIC;
        t_d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        t_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        i_ce : IN STD_LOGIC;
        t_ce : IN STD_LOGIC;
        i_full_n : OUT STD_LOGIC;
        i_write : IN STD_LOGIC;
        t_empty_n : OUT STD_LOGIC;
        t_read : IN STD_LOGIC );
    end component;



begin
    Stage1_real_U : component top_Stage1_real
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dft1_U0_dft_real_address0,
        i_ce0 => dft1_U0_dft_real_ce0,
        i_we0 => dft1_U0_dft_real_we0,
        i_d0 => dft1_U0_dft_real_d0,
        i_q0 => Stage1_real_i_q0,
        t_address0 => dft2_U0_real_sample_address0,
        t_ce0 => dft2_U0_real_sample_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => Stage1_real_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage1_real_i_full_n,
        i_write => ap_channel_done_Stage1_real,
        t_empty_n => Stage1_real_t_empty_n,
        t_read => dft2_U0_ap_ready);

    Stage1_imag_U : component top_Stage1_real
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dft1_U0_dft_imag_address0,
        i_ce0 => dft1_U0_dft_imag_ce0,
        i_we0 => dft1_U0_dft_imag_we0,
        i_d0 => dft1_U0_dft_imag_d0,
        i_q0 => Stage1_imag_i_q0,
        t_address0 => dft2_U0_imag_sample_address0,
        t_ce0 => dft2_U0_imag_sample_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => Stage1_imag_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage1_imag_i_full_n,
        i_write => ap_channel_done_Stage1_imag,
        t_empty_n => Stage1_imag_t_empty_n,
        t_read => dft2_U0_ap_ready);

    Stage2_real_U : component top_Stage1_real
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dft2_U0_dft_real_address0,
        i_ce0 => dft2_U0_dft_real_ce0,
        i_we0 => dft2_U0_dft_real_we0,
        i_d0 => dft2_U0_dft_real_d0,
        i_q0 => Stage2_real_i_q0,
        t_address0 => dft3_U0_real_sample_address0,
        t_ce0 => dft3_U0_real_sample_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => Stage2_real_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage2_real_i_full_n,
        i_write => ap_channel_done_Stage2_real,
        t_empty_n => Stage2_real_t_empty_n,
        t_read => dft3_U0_ap_ready);

    Stage2_imag_U : component top_Stage1_real
    generic map (
        DataWidth => 32,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        i_address0 => dft2_U0_dft_imag_address0,
        i_ce0 => dft2_U0_dft_imag_ce0,
        i_we0 => dft2_U0_dft_imag_we0,
        i_d0 => dft2_U0_dft_imag_d0,
        i_q0 => Stage2_imag_i_q0,
        t_address0 => dft3_U0_imag_sample_address0,
        t_ce0 => dft3_U0_imag_sample_ce0,
        t_we0 => ap_const_logic_0,
        t_d0 => ap_const_lv32_0,
        t_q0 => Stage2_imag_t_q0,
        i_ce => ap_const_logic_1,
        t_ce => ap_const_logic_1,
        i_full_n => Stage2_imag_i_full_n,
        i_write => ap_channel_done_Stage2_imag,
        t_empty_n => Stage2_imag_t_empty_n,
        t_read => dft3_U0_ap_ready);

    dft1_U0 : component dft1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dft1_U0_ap_start,
        ap_done => dft1_U0_ap_done,
        ap_continue => dft1_U0_ap_continue,
        ap_idle => dft1_U0_ap_idle,
        ap_ready => dft1_U0_ap_ready,
        real_sample_address0 => dft1_U0_real_sample_address0,
        real_sample_ce0 => dft1_U0_real_sample_ce0,
        real_sample_q0 => real_sample_q0,
        imag_sample_address0 => dft1_U0_imag_sample_address0,
        imag_sample_ce0 => dft1_U0_imag_sample_ce0,
        imag_sample_q0 => imag_sample_q0,
        dft_real_address0 => dft1_U0_dft_real_address0,
        dft_real_ce0 => dft1_U0_dft_real_ce0,
        dft_real_we0 => dft1_U0_dft_real_we0,
        dft_real_d0 => dft1_U0_dft_real_d0,
        dft_real_q0 => Stage1_real_i_q0,
        dft_imag_address0 => dft1_U0_dft_imag_address0,
        dft_imag_ce0 => dft1_U0_dft_imag_ce0,
        dft_imag_we0 => dft1_U0_dft_imag_we0,
        dft_imag_d0 => dft1_U0_dft_imag_d0,
        dft_imag_q0 => Stage1_imag_i_q0);

    dft2_U0 : component dft2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dft2_U0_ap_start,
        ap_done => dft2_U0_ap_done,
        ap_continue => dft2_U0_ap_continue,
        ap_idle => dft2_U0_ap_idle,
        ap_ready => dft2_U0_ap_ready,
        real_sample_address0 => dft2_U0_real_sample_address0,
        real_sample_ce0 => dft2_U0_real_sample_ce0,
        real_sample_q0 => Stage1_real_t_q0,
        imag_sample_address0 => dft2_U0_imag_sample_address0,
        imag_sample_ce0 => dft2_U0_imag_sample_ce0,
        imag_sample_q0 => Stage1_imag_t_q0,
        dft_real_address0 => dft2_U0_dft_real_address0,
        dft_real_ce0 => dft2_U0_dft_real_ce0,
        dft_real_we0 => dft2_U0_dft_real_we0,
        dft_real_d0 => dft2_U0_dft_real_d0,
        dft_real_q0 => Stage2_real_i_q0,
        dft_imag_address0 => dft2_U0_dft_imag_address0,
        dft_imag_ce0 => dft2_U0_dft_imag_ce0,
        dft_imag_we0 => dft2_U0_dft_imag_we0,
        dft_imag_d0 => dft2_U0_dft_imag_d0,
        dft_imag_q0 => Stage2_imag_i_q0);

    dft3_U0 : component dft3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dft3_U0_ap_start,
        ap_done => dft3_U0_ap_done,
        ap_continue => dft3_U0_ap_continue,
        ap_idle => dft3_U0_ap_idle,
        ap_ready => dft3_U0_ap_ready,
        real_sample_address0 => dft3_U0_real_sample_address0,
        real_sample_ce0 => dft3_U0_real_sample_ce0,
        real_sample_q0 => Stage2_real_t_q0,
        imag_sample_address0 => dft3_U0_imag_sample_address0,
        imag_sample_ce0 => dft3_U0_imag_sample_ce0,
        imag_sample_q0 => Stage2_imag_t_q0,
        dft_real_address0 => dft3_U0_dft_real_address0,
        dft_real_ce0 => dft3_U0_dft_real_ce0,
        dft_real_we0 => dft3_U0_dft_real_we0,
        dft_real_d0 => dft3_U0_dft_real_d0,
        dft_imag_address0 => dft3_U0_dft_imag_address0,
        dft_imag_ce0 => dft3_U0_dft_imag_ce0,
        dft_imag_we0 => dft3_U0_dft_imag_we0,
        dft_imag_d0 => dft3_U0_dft_imag_d0);





    ap_sync_reg_channel_write_Stage1_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage1_imag <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dft1_U0_ap_done and dft1_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_Stage1_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage1_imag <= ap_sync_channel_write_Stage1_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage1_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage1_real <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dft1_U0_ap_done and dft1_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_Stage1_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage1_real <= ap_sync_channel_write_Stage1_real;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage2_imag_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage2_imag <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dft2_U0_ap_done and dft2_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_Stage2_imag <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage2_imag <= ap_sync_channel_write_Stage2_imag;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_channel_write_Stage2_real_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_channel_write_Stage2_real <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = (dft2_U0_ap_done and dft2_U0_ap_continue))) then 
                    ap_sync_reg_channel_write_Stage2_real <= ap_const_logic_0;
                else 
                    ap_sync_reg_channel_write_Stage2_real <= ap_sync_channel_write_Stage2_real;
                end if; 
            end if;
        end if;
    end process;

    ap_channel_done_Stage1_imag <= (dft1_U0_ap_done and (ap_sync_reg_channel_write_Stage1_imag xor ap_const_logic_1));
    ap_channel_done_Stage1_real <= (dft1_U0_ap_done and (ap_sync_reg_channel_write_Stage1_real xor ap_const_logic_1));
    ap_channel_done_Stage2_imag <= (dft2_U0_ap_done and (ap_sync_reg_channel_write_Stage2_imag xor ap_const_logic_1));
    ap_channel_done_Stage2_real <= (dft2_U0_ap_done and (ap_sync_reg_channel_write_Stage2_real xor ap_const_logic_1));
    ap_done <= dft3_U0_ap_done;
    ap_idle <= (dft1_U0_ap_idle and dft2_U0_ap_idle and dft3_U0_ap_idle and (Stage1_real_t_empty_n xor ap_const_logic_1) and (Stage1_imag_t_empty_n xor ap_const_logic_1) and (Stage2_real_t_empty_n xor ap_const_logic_1) and (Stage2_imag_t_empty_n xor ap_const_logic_1));
    ap_ready <= dft1_U0_ap_ready;
    ap_sync_channel_write_Stage1_imag <= ((ap_channel_done_Stage1_imag and dft1_U0_dft_imag_full_n) or ap_sync_reg_channel_write_Stage1_imag);
    ap_sync_channel_write_Stage1_real <= ((ap_channel_done_Stage1_real and dft1_U0_dft_real_full_n) or ap_sync_reg_channel_write_Stage1_real);
    ap_sync_channel_write_Stage2_imag <= ((ap_channel_done_Stage2_imag and dft2_U0_dft_imag_full_n) or ap_sync_reg_channel_write_Stage2_imag);
    ap_sync_channel_write_Stage2_real <= ((ap_channel_done_Stage2_real and dft2_U0_dft_real_full_n) or ap_sync_reg_channel_write_Stage2_real);
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= dft3_U0_ap_done;
    ap_sync_ready <= dft1_U0_ap_ready;
    dft1_U0_ap_continue <= (ap_sync_channel_write_Stage1_imag and ap_sync_channel_write_Stage1_real);
    dft1_U0_ap_start <= ap_start;
    dft1_U0_dft_imag_full_n <= Stage1_imag_i_full_n;
    dft1_U0_dft_real_full_n <= Stage1_real_i_full_n;
    dft1_U0_start_full_n <= ap_const_logic_0;
    dft1_U0_start_write <= ap_const_logic_0;
    dft2_U0_ap_continue <= (ap_sync_channel_write_Stage2_imag and ap_sync_channel_write_Stage2_real);
    dft2_U0_ap_start <= (Stage1_real_t_empty_n and Stage1_imag_t_empty_n);
    dft2_U0_dft_imag_full_n <= Stage2_imag_i_full_n;
    dft2_U0_dft_real_full_n <= Stage2_real_i_full_n;
    dft2_U0_start_full_n <= ap_const_logic_0;
    dft2_U0_start_write <= ap_const_logic_0;
    dft3_U0_ap_continue <= ap_const_logic_1;
    dft3_U0_ap_start <= (Stage2_real_t_empty_n and Stage2_imag_t_empty_n);
    dft3_U0_start_full_n <= ap_const_logic_0;
    dft3_U0_start_write <= ap_const_logic_0;
    dft_imag_address0 <= dft3_U0_dft_imag_address0;
    dft_imag_address1 <= ap_const_lv8_0;
    dft_imag_ce0 <= dft3_U0_dft_imag_ce0;
    dft_imag_ce1 <= ap_const_logic_0;
    dft_imag_d0 <= dft3_U0_dft_imag_d0;
    dft_imag_d1 <= ap_const_lv32_0;
    dft_imag_we0 <= dft3_U0_dft_imag_we0;
    dft_imag_we1 <= ap_const_logic_0;
    dft_real_address0 <= dft3_U0_dft_real_address0;
    dft_real_address1 <= ap_const_lv8_0;
    dft_real_ce0 <= dft3_U0_dft_real_ce0;
    dft_real_ce1 <= ap_const_logic_0;
    dft_real_d0 <= dft3_U0_dft_real_d0;
    dft_real_d1 <= ap_const_lv32_0;
    dft_real_we0 <= dft3_U0_dft_real_we0;
    dft_real_we1 <= ap_const_logic_0;
    imag_sample_address0 <= dft1_U0_imag_sample_address0;
    imag_sample_address1 <= ap_const_lv8_0;
    imag_sample_ce0 <= dft1_U0_imag_sample_ce0;
    imag_sample_ce1 <= ap_const_logic_0;
    imag_sample_d0 <= ap_const_lv32_0;
    imag_sample_d1 <= ap_const_lv32_0;
    imag_sample_we0 <= ap_const_logic_0;
    imag_sample_we1 <= ap_const_logic_0;
    real_sample_address0 <= dft1_U0_real_sample_address0;
    real_sample_address1 <= ap_const_lv8_0;
    real_sample_ce0 <= dft1_U0_real_sample_ce0;
    real_sample_ce1 <= ap_const_logic_0;
    real_sample_d0 <= ap_const_lv32_0;
    real_sample_d1 <= ap_const_lv32_0;
    real_sample_we0 <= ap_const_logic_0;
    real_sample_we1 <= ap_const_logic_0;
end behav;
