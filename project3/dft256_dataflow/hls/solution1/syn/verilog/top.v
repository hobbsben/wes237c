// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="top,hls_ip_2017_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.424000,HLS_SYN_LAT=1115141,HLS_SYN_TPT=557314,HLS_SYN_MEM=8,HLS_SYN_DSP=32,HLS_SYN_FF=2916,HLS_SYN_LUT=4955}" *)

module top (
        ap_clk,
        ap_rst,
        real_sample_address0,
        real_sample_ce0,
        real_sample_d0,
        real_sample_q0,
        real_sample_we0,
        real_sample_address1,
        real_sample_ce1,
        real_sample_d1,
        real_sample_q1,
        real_sample_we1,
        imag_sample_address0,
        imag_sample_ce0,
        imag_sample_d0,
        imag_sample_q0,
        imag_sample_we0,
        imag_sample_address1,
        imag_sample_ce1,
        imag_sample_d1,
        imag_sample_q1,
        imag_sample_we1,
        dft_real_address0,
        dft_real_ce0,
        dft_real_d0,
        dft_real_q0,
        dft_real_we0,
        dft_real_address1,
        dft_real_ce1,
        dft_real_d1,
        dft_real_q1,
        dft_real_we1,
        dft_imag_address0,
        dft_imag_ce0,
        dft_imag_d0,
        dft_imag_q0,
        dft_imag_we0,
        dft_imag_address1,
        dft_imag_ce1,
        dft_imag_d1,
        dft_imag_q1,
        dft_imag_we1,
        ap_done,
        ap_start,
        ap_ready,
        ap_idle
);


input   ap_clk;
input   ap_rst;
output  [7:0] real_sample_address0;
output   real_sample_ce0;
output  [31:0] real_sample_d0;
input  [31:0] real_sample_q0;
output   real_sample_we0;
output  [7:0] real_sample_address1;
output   real_sample_ce1;
output  [31:0] real_sample_d1;
input  [31:0] real_sample_q1;
output   real_sample_we1;
output  [7:0] imag_sample_address0;
output   imag_sample_ce0;
output  [31:0] imag_sample_d0;
input  [31:0] imag_sample_q0;
output   imag_sample_we0;
output  [7:0] imag_sample_address1;
output   imag_sample_ce1;
output  [31:0] imag_sample_d1;
input  [31:0] imag_sample_q1;
output   imag_sample_we1;
output  [7:0] dft_real_address0;
output   dft_real_ce0;
output  [31:0] dft_real_d0;
input  [31:0] dft_real_q0;
output   dft_real_we0;
output  [7:0] dft_real_address1;
output   dft_real_ce1;
output  [31:0] dft_real_d1;
input  [31:0] dft_real_q1;
output   dft_real_we1;
output  [7:0] dft_imag_address0;
output   dft_imag_ce0;
output  [31:0] dft_imag_d0;
input  [31:0] dft_imag_q0;
output   dft_imag_we0;
output  [7:0] dft_imag_address1;
output   dft_imag_ce1;
output  [31:0] dft_imag_d1;
input  [31:0] dft_imag_q1;
output   dft_imag_we1;
output   ap_done;
input   ap_start;
output   ap_ready;
output   ap_idle;

wire   [31:0] Stage1_real_i_q0;
wire   [31:0] Stage1_real_t_q0;
wire   [31:0] Stage1_imag_i_q0;
wire   [31:0] Stage1_imag_t_q0;
wire   [31:0] Stage2_real_i_q0;
wire   [31:0] Stage2_real_t_q0;
wire   [31:0] Stage2_imag_i_q0;
wire   [31:0] Stage2_imag_t_q0;
wire    dft1_U0_ap_start;
wire    dft1_U0_ap_done;
wire    dft1_U0_ap_continue;
wire    dft1_U0_ap_idle;
wire    dft1_U0_ap_ready;
wire   [7:0] dft1_U0_real_sample_address0;
wire    dft1_U0_real_sample_ce0;
wire   [7:0] dft1_U0_imag_sample_address0;
wire    dft1_U0_imag_sample_ce0;
wire   [7:0] dft1_U0_dft_real_address0;
wire    dft1_U0_dft_real_ce0;
wire    dft1_U0_dft_real_we0;
wire   [31:0] dft1_U0_dft_real_d0;
wire   [7:0] dft1_U0_dft_imag_address0;
wire    dft1_U0_dft_imag_ce0;
wire    dft1_U0_dft_imag_we0;
wire   [31:0] dft1_U0_dft_imag_d0;
wire    ap_channel_done_Stage1_imag;
wire    dft1_U0_dft_imag_full_n;
reg    ap_sync_reg_channel_write_Stage1_imag;
wire    ap_sync_channel_write_Stage1_imag;
wire    ap_channel_done_Stage1_real;
wire    dft1_U0_dft_real_full_n;
reg    ap_sync_reg_channel_write_Stage1_real;
wire    ap_sync_channel_write_Stage1_real;
wire    dft2_U0_ap_start;
wire    dft2_U0_ap_done;
wire    dft2_U0_ap_continue;
wire    dft2_U0_ap_idle;
wire    dft2_U0_ap_ready;
wire   [7:0] dft2_U0_real_sample_address0;
wire    dft2_U0_real_sample_ce0;
wire   [7:0] dft2_U0_imag_sample_address0;
wire    dft2_U0_imag_sample_ce0;
wire   [7:0] dft2_U0_dft_real_address0;
wire    dft2_U0_dft_real_ce0;
wire    dft2_U0_dft_real_we0;
wire   [31:0] dft2_U0_dft_real_d0;
wire   [7:0] dft2_U0_dft_imag_address0;
wire    dft2_U0_dft_imag_ce0;
wire    dft2_U0_dft_imag_we0;
wire   [31:0] dft2_U0_dft_imag_d0;
wire    ap_channel_done_Stage2_imag;
wire    dft2_U0_dft_imag_full_n;
reg    ap_sync_reg_channel_write_Stage2_imag;
wire    ap_sync_channel_write_Stage2_imag;
wire    ap_channel_done_Stage2_real;
wire    dft2_U0_dft_real_full_n;
reg    ap_sync_reg_channel_write_Stage2_real;
wire    ap_sync_channel_write_Stage2_real;
wire    dft3_U0_ap_start;
wire    dft3_U0_ap_done;
wire    dft3_U0_ap_continue;
wire    dft3_U0_ap_idle;
wire    dft3_U0_ap_ready;
wire   [7:0] dft3_U0_real_sample_address0;
wire    dft3_U0_real_sample_ce0;
wire   [7:0] dft3_U0_imag_sample_address0;
wire    dft3_U0_imag_sample_ce0;
wire   [7:0] dft3_U0_dft_real_address0;
wire    dft3_U0_dft_real_ce0;
wire    dft3_U0_dft_real_we0;
wire   [31:0] dft3_U0_dft_real_d0;
wire   [7:0] dft3_U0_dft_imag_address0;
wire    dft3_U0_dft_imag_ce0;
wire    dft3_U0_dft_imag_we0;
wire   [31:0] dft3_U0_dft_imag_d0;
wire    ap_sync_continue;
wire    Stage1_real_i_full_n;
wire    Stage1_real_t_empty_n;
wire    Stage1_imag_i_full_n;
wire    Stage1_imag_t_empty_n;
wire    Stage2_real_i_full_n;
wire    Stage2_real_t_empty_n;
wire    Stage2_imag_i_full_n;
wire    Stage2_imag_t_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    dft1_U0_start_full_n;
wire    dft1_U0_start_write;
wire    dft2_U0_start_full_n;
wire    dft2_U0_start_write;
wire    dft3_U0_start_full_n;
wire    dft3_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_Stage1_imag = 1'b0;
#0 ap_sync_reg_channel_write_Stage1_real = 1'b0;
#0 ap_sync_reg_channel_write_Stage2_imag = 1'b0;
#0 ap_sync_reg_channel_write_Stage2_real = 1'b0;
end

top_Stage1_real #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Stage1_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(dft1_U0_dft_real_address0),
    .i_ce0(dft1_U0_dft_real_ce0),
    .i_we0(dft1_U0_dft_real_we0),
    .i_d0(dft1_U0_dft_real_d0),
    .i_q0(Stage1_real_i_q0),
    .t_address0(dft2_U0_real_sample_address0),
    .t_ce0(dft2_U0_real_sample_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage1_real_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage1_real_i_full_n),
    .i_write(ap_channel_done_Stage1_real),
    .t_empty_n(Stage1_real_t_empty_n),
    .t_read(dft2_U0_ap_ready)
);

top_Stage1_real #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Stage1_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(dft1_U0_dft_imag_address0),
    .i_ce0(dft1_U0_dft_imag_ce0),
    .i_we0(dft1_U0_dft_imag_we0),
    .i_d0(dft1_U0_dft_imag_d0),
    .i_q0(Stage1_imag_i_q0),
    .t_address0(dft2_U0_imag_sample_address0),
    .t_ce0(dft2_U0_imag_sample_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage1_imag_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage1_imag_i_full_n),
    .i_write(ap_channel_done_Stage1_imag),
    .t_empty_n(Stage1_imag_t_empty_n),
    .t_read(dft2_U0_ap_ready)
);

top_Stage1_real #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Stage2_real_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(dft2_U0_dft_real_address0),
    .i_ce0(dft2_U0_dft_real_ce0),
    .i_we0(dft2_U0_dft_real_we0),
    .i_d0(dft2_U0_dft_real_d0),
    .i_q0(Stage2_real_i_q0),
    .t_address0(dft3_U0_real_sample_address0),
    .t_ce0(dft3_U0_real_sample_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage2_real_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage2_real_i_full_n),
    .i_write(ap_channel_done_Stage2_real),
    .t_empty_n(Stage2_real_t_empty_n),
    .t_read(dft3_U0_ap_ready)
);

top_Stage1_real #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
Stage2_imag_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(dft2_U0_dft_imag_address0),
    .i_ce0(dft2_U0_dft_imag_ce0),
    .i_we0(dft2_U0_dft_imag_we0),
    .i_d0(dft2_U0_dft_imag_d0),
    .i_q0(Stage2_imag_i_q0),
    .t_address0(dft3_U0_imag_sample_address0),
    .t_ce0(dft3_U0_imag_sample_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(Stage2_imag_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(Stage2_imag_i_full_n),
    .i_write(ap_channel_done_Stage2_imag),
    .t_empty_n(Stage2_imag_t_empty_n),
    .t_read(dft3_U0_ap_ready)
);

dft1 dft1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dft1_U0_ap_start),
    .ap_done(dft1_U0_ap_done),
    .ap_continue(dft1_U0_ap_continue),
    .ap_idle(dft1_U0_ap_idle),
    .ap_ready(dft1_U0_ap_ready),
    .real_sample_address0(dft1_U0_real_sample_address0),
    .real_sample_ce0(dft1_U0_real_sample_ce0),
    .real_sample_q0(real_sample_q0),
    .imag_sample_address0(dft1_U0_imag_sample_address0),
    .imag_sample_ce0(dft1_U0_imag_sample_ce0),
    .imag_sample_q0(imag_sample_q0),
    .dft_real_address0(dft1_U0_dft_real_address0),
    .dft_real_ce0(dft1_U0_dft_real_ce0),
    .dft_real_we0(dft1_U0_dft_real_we0),
    .dft_real_d0(dft1_U0_dft_real_d0),
    .dft_real_q0(Stage1_real_i_q0),
    .dft_imag_address0(dft1_U0_dft_imag_address0),
    .dft_imag_ce0(dft1_U0_dft_imag_ce0),
    .dft_imag_we0(dft1_U0_dft_imag_we0),
    .dft_imag_d0(dft1_U0_dft_imag_d0),
    .dft_imag_q0(Stage1_imag_i_q0)
);

dft2 dft2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dft2_U0_ap_start),
    .ap_done(dft2_U0_ap_done),
    .ap_continue(dft2_U0_ap_continue),
    .ap_idle(dft2_U0_ap_idle),
    .ap_ready(dft2_U0_ap_ready),
    .real_sample_address0(dft2_U0_real_sample_address0),
    .real_sample_ce0(dft2_U0_real_sample_ce0),
    .real_sample_q0(Stage1_real_t_q0),
    .imag_sample_address0(dft2_U0_imag_sample_address0),
    .imag_sample_ce0(dft2_U0_imag_sample_ce0),
    .imag_sample_q0(Stage1_imag_t_q0),
    .dft_real_address0(dft2_U0_dft_real_address0),
    .dft_real_ce0(dft2_U0_dft_real_ce0),
    .dft_real_we0(dft2_U0_dft_real_we0),
    .dft_real_d0(dft2_U0_dft_real_d0),
    .dft_real_q0(Stage2_real_i_q0),
    .dft_imag_address0(dft2_U0_dft_imag_address0),
    .dft_imag_ce0(dft2_U0_dft_imag_ce0),
    .dft_imag_we0(dft2_U0_dft_imag_we0),
    .dft_imag_d0(dft2_U0_dft_imag_d0),
    .dft_imag_q0(Stage2_imag_i_q0)
);

dft3 dft3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(dft3_U0_ap_start),
    .ap_done(dft3_U0_ap_done),
    .ap_continue(dft3_U0_ap_continue),
    .ap_idle(dft3_U0_ap_idle),
    .ap_ready(dft3_U0_ap_ready),
    .real_sample_address0(dft3_U0_real_sample_address0),
    .real_sample_ce0(dft3_U0_real_sample_ce0),
    .real_sample_q0(Stage2_real_t_q0),
    .imag_sample_address0(dft3_U0_imag_sample_address0),
    .imag_sample_ce0(dft3_U0_imag_sample_ce0),
    .imag_sample_q0(Stage2_imag_t_q0),
    .dft_real_address0(dft3_U0_dft_real_address0),
    .dft_real_ce0(dft3_U0_dft_real_ce0),
    .dft_real_we0(dft3_U0_dft_real_we0),
    .dft_real_d0(dft3_U0_dft_real_d0),
    .dft_imag_address0(dft3_U0_dft_imag_address0),
    .dft_imag_ce0(dft3_U0_dft_imag_ce0),
    .dft_imag_we0(dft3_U0_dft_imag_we0),
    .dft_imag_d0(dft3_U0_dft_imag_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage1_imag <= 1'b0;
    end else begin
        if ((1'b1 == (dft1_U0_ap_done & dft1_U0_ap_continue))) begin
            ap_sync_reg_channel_write_Stage1_imag <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage1_imag <= ap_sync_channel_write_Stage1_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage1_real <= 1'b0;
    end else begin
        if ((1'b1 == (dft1_U0_ap_done & dft1_U0_ap_continue))) begin
            ap_sync_reg_channel_write_Stage1_real <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage1_real <= ap_sync_channel_write_Stage1_real;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage2_imag <= 1'b0;
    end else begin
        if ((1'b1 == (dft2_U0_ap_done & dft2_U0_ap_continue))) begin
            ap_sync_reg_channel_write_Stage2_imag <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage2_imag <= ap_sync_channel_write_Stage2_imag;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_Stage2_real <= 1'b0;
    end else begin
        if ((1'b1 == (dft2_U0_ap_done & dft2_U0_ap_continue))) begin
            ap_sync_reg_channel_write_Stage2_real <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_Stage2_real <= ap_sync_channel_write_Stage2_real;
        end
    end
end

assign ap_channel_done_Stage1_imag = (dft1_U0_ap_done & (ap_sync_reg_channel_write_Stage1_imag ^ 1'b1));

assign ap_channel_done_Stage1_real = (dft1_U0_ap_done & (ap_sync_reg_channel_write_Stage1_real ^ 1'b1));

assign ap_channel_done_Stage2_imag = (dft2_U0_ap_done & (ap_sync_reg_channel_write_Stage2_imag ^ 1'b1));

assign ap_channel_done_Stage2_real = (dft2_U0_ap_done & (ap_sync_reg_channel_write_Stage2_real ^ 1'b1));

assign ap_done = dft3_U0_ap_done;

assign ap_idle = (dft1_U0_ap_idle & dft2_U0_ap_idle & dft3_U0_ap_idle & (Stage1_real_t_empty_n ^ 1'b1) & (Stage1_imag_t_empty_n ^ 1'b1) & (Stage2_real_t_empty_n ^ 1'b1) & (Stage2_imag_t_empty_n ^ 1'b1));

assign ap_ready = dft1_U0_ap_ready;

assign ap_sync_channel_write_Stage1_imag = ((ap_channel_done_Stage1_imag & dft1_U0_dft_imag_full_n) | ap_sync_reg_channel_write_Stage1_imag);

assign ap_sync_channel_write_Stage1_real = ((ap_channel_done_Stage1_real & dft1_U0_dft_real_full_n) | ap_sync_reg_channel_write_Stage1_real);

assign ap_sync_channel_write_Stage2_imag = ((ap_channel_done_Stage2_imag & dft2_U0_dft_imag_full_n) | ap_sync_reg_channel_write_Stage2_imag);

assign ap_sync_channel_write_Stage2_real = ((ap_channel_done_Stage2_real & dft2_U0_dft_real_full_n) | ap_sync_reg_channel_write_Stage2_real);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = dft3_U0_ap_done;

assign ap_sync_ready = dft1_U0_ap_ready;

assign dft1_U0_ap_continue = (ap_sync_channel_write_Stage1_imag & ap_sync_channel_write_Stage1_real);

assign dft1_U0_ap_start = ap_start;

assign dft1_U0_dft_imag_full_n = Stage1_imag_i_full_n;

assign dft1_U0_dft_real_full_n = Stage1_real_i_full_n;

assign dft1_U0_start_full_n = 1'b0;

assign dft1_U0_start_write = 1'b0;

assign dft2_U0_ap_continue = (ap_sync_channel_write_Stage2_imag & ap_sync_channel_write_Stage2_real);

assign dft2_U0_ap_start = (Stage1_real_t_empty_n & Stage1_imag_t_empty_n);

assign dft2_U0_dft_imag_full_n = Stage2_imag_i_full_n;

assign dft2_U0_dft_real_full_n = Stage2_real_i_full_n;

assign dft2_U0_start_full_n = 1'b0;

assign dft2_U0_start_write = 1'b0;

assign dft3_U0_ap_continue = 1'b1;

assign dft3_U0_ap_start = (Stage2_real_t_empty_n & Stage2_imag_t_empty_n);

assign dft3_U0_start_full_n = 1'b0;

assign dft3_U0_start_write = 1'b0;

assign dft_imag_address0 = dft3_U0_dft_imag_address0;

assign dft_imag_address1 = 8'd0;

assign dft_imag_ce0 = dft3_U0_dft_imag_ce0;

assign dft_imag_ce1 = 1'b0;

assign dft_imag_d0 = dft3_U0_dft_imag_d0;

assign dft_imag_d1 = 32'd0;

assign dft_imag_we0 = dft3_U0_dft_imag_we0;

assign dft_imag_we1 = 1'b0;

assign dft_real_address0 = dft3_U0_dft_real_address0;

assign dft_real_address1 = 8'd0;

assign dft_real_ce0 = dft3_U0_dft_real_ce0;

assign dft_real_ce1 = 1'b0;

assign dft_real_d0 = dft3_U0_dft_real_d0;

assign dft_real_d1 = 32'd0;

assign dft_real_we0 = dft3_U0_dft_real_we0;

assign dft_real_we1 = 1'b0;

assign imag_sample_address0 = dft1_U0_imag_sample_address0;

assign imag_sample_address1 = 8'd0;

assign imag_sample_ce0 = dft1_U0_imag_sample_ce0;

assign imag_sample_ce1 = 1'b0;

assign imag_sample_d0 = 32'd0;

assign imag_sample_d1 = 32'd0;

assign imag_sample_we0 = 1'b0;

assign imag_sample_we1 = 1'b0;

assign real_sample_address0 = dft1_U0_real_sample_address0;

assign real_sample_address1 = 8'd0;

assign real_sample_ce0 = dft1_U0_real_sample_ce0;

assign real_sample_ce1 = 1'b0;

assign real_sample_d0 = 32'd0;

assign real_sample_d1 = 32'd0;

assign real_sample_we0 = 1'b0;

assign real_sample_we1 = 1'b0;

endmodule //top
