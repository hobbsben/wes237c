// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.1
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dft2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        real_sample_address0,
        real_sample_ce0,
        real_sample_q0,
        imag_sample_address0,
        imag_sample_ce0,
        imag_sample_q0,
        dft_real_address0,
        dft_real_ce0,
        dft_real_we0,
        dft_real_d0,
        dft_real_q0,
        dft_imag_address0,
        dft_imag_ce0,
        dft_imag_we0,
        dft_imag_d0,
        dft_imag_q0
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [7:0] real_sample_address0;
output   real_sample_ce0;
input  [31:0] real_sample_q0;
output  [7:0] imag_sample_address0;
output   imag_sample_ce0;
input  [31:0] imag_sample_q0;
output  [7:0] dft_real_address0;
output   dft_real_ce0;
output   dft_real_we0;
output  [31:0] dft_real_d0;
input  [31:0] dft_real_q0;
output  [7:0] dft_imag_address0;
output   dft_imag_ce0;
output   dft_imag_we0;
output  [31:0] dft_imag_d0;
input  [31:0] dft_imag_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg real_sample_ce0;
reg imag_sample_ce0;
reg dft_real_ce0;
reg dft_real_we0;
reg dft_imag_ce0;
reg dft_imag_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] cos_coefficients_tab_address0;
reg    cos_coefficients_tab_ce0;
wire   [31:0] cos_coefficients_tab_q0;
wire   [7:0] sin_coefficients_tab_address0;
reg    sin_coefficients_tab_ce0;
wire   [31:0] sin_coefficients_tab_q0;
wire   [31:0] grp_fu_131_p2;
reg   [31:0] reg_155;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state18;
wire   [31:0] grp_fu_135_p2;
reg   [31:0] reg_161;
reg   [7:0] dft_real_addr_reg_226;
wire    ap_CS_fsm_state2;
wire   [0:0] exitcond1_fu_173_p2;
reg   [7:0] dft_imag_addr_reg_231;
wire   [8:0] w_2_fu_195_p2;
reg   [8:0] w_2_reg_239;
wire    ap_CS_fsm_state3;
wire   [0:0] exitcond_fu_189_p2;
wire   [8:0] n_1_fu_217_p2;
reg   [31:0] cos_coefficients_tab_2_reg_269;
wire    ap_CS_fsm_state4;
reg   [31:0] real_sample_load_reg_275;
reg   [31:0] sin_coefficients_tab_2_reg_281;
reg   [31:0] imag_sample_load_reg_287;
wire   [31:0] grp_fu_139_p2;
reg   [31:0] tmp_2_reg_293;
wire    ap_CS_fsm_state8;
wire   [31:0] grp_fu_143_p2;
reg   [31:0] tmp_3_reg_298;
wire   [31:0] grp_fu_147_p2;
reg   [31:0] tmp_6_reg_303;
wire   [31:0] grp_fu_151_p2;
reg   [31:0] tmp_7_reg_308;
reg   [31:0] dft_real_load_reg_313;
reg   [31:0] dft_imag_load_reg_318;
reg   [8:0] n_reg_108;
reg    ap_block_state1;
reg   [8:0] w_reg_120;
wire    ap_CS_fsm_state19;
wire   [31:0] n_cast1_fu_167_p1;
wire   [31:0] ind_cast_fu_211_p1;
wire   [31:0] w_cast1_fu_179_p1;
wire    ap_CS_fsm_state12;
reg   [31:0] grp_fu_131_p0;
reg   [31:0] grp_fu_131_p1;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state14;
reg   [31:0] grp_fu_135_p0;
reg   [31:0] grp_fu_135_p1;
wire    ap_CS_fsm_state5;
wire  signed [7:0] tmp_fu_185_p1;
wire  signed [7:0] tmp_10_fu_201_p1;
wire   [7:0] ind_fu_205_p2;
reg   [1:0] grp_fu_131_opcode;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 19'd1;
end

dft1_cos_coefficibkb #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
cos_coefficients_tab_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cos_coefficients_tab_address0),
    .ce0(cos_coefficients_tab_ce0),
    .q0(cos_coefficients_tab_q0)
);

dft1_sin_coefficicud #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sin_coefficients_tab_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sin_coefficients_tab_address0),
    .ce0(sin_coefficients_tab_ce0),
    .q0(sin_coefficients_tab_q0)
);

top_faddfsub_32nsdEe #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_faddfsub_32nsdEe_x_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_131_p0),
    .din1(grp_fu_131_p1),
    .opcode(grp_fu_131_opcode),
    .ce(1'b1),
    .dout(grp_fu_131_p2)
);

top_fadd_32ns_32neOg #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fadd_32ns_32neOg_x_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_135_p0),
    .din1(grp_fu_135_p1),
    .ce(1'b1),
    .dout(grp_fu_135_p2)
);

top_fmul_32ns_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fmul_32ns_32nfYi_x_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cos_coefficients_tab_2_reg_269),
    .din1(real_sample_load_reg_275),
    .ce(1'b1),
    .dout(grp_fu_139_p2)
);

top_fmul_32ns_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fmul_32ns_32nfYi_x_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sin_coefficients_tab_2_reg_281),
    .din1(imag_sample_load_reg_287),
    .ce(1'b1),
    .dout(grp_fu_143_p2)
);

top_fmul_32ns_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fmul_32ns_32nfYi_x_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sin_coefficients_tab_2_reg_281),
    .din1(real_sample_load_reg_275),
    .ce(1'b1),
    .dout(grp_fu_147_p2)
);

top_fmul_32ns_32nfYi #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
top_fmul_32ns_32nfYi_x_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(cos_coefficients_tab_2_reg_269),
    .din1(imag_sample_load_reg_287),
    .ce(1'b1),
    .dout(grp_fu_151_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_continue)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_173_p2 == 1'd1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_189_p2 == 1'd1))) begin
        n_reg_108 <= n_1_fu_217_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
        n_reg_108 <= 9'd128;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        w_reg_120 <= w_2_reg_239;
    end else if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_173_p2 == 1'd0))) begin
        w_reg_120 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        cos_coefficients_tab_2_reg_269 <= cos_coefficients_tab_q0;
        imag_sample_load_reg_287 <= imag_sample_q0;
        real_sample_load_reg_275 <= real_sample_q0;
        sin_coefficients_tab_2_reg_281 <= sin_coefficients_tab_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_173_p2 == 1'd0))) begin
        dft_imag_addr_reg_231 <= n_cast1_fu_167_p1;
        dft_real_addr_reg_226 <= n_cast1_fu_167_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        dft_imag_load_reg_318 <= dft_imag_q0;
        dft_real_load_reg_313 <= dft_real_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_155 <= grp_fu_131_p2;
        reg_161 <= grp_fu_135_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_2_reg_293 <= grp_fu_139_p2;
        tmp_3_reg_298 <= grp_fu_143_p2;
        tmp_6_reg_303 <= grp_fu_147_p2;
        tmp_7_reg_308 <= grp_fu_151_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        w_2_reg_239 <= w_2_fu_195_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_173_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_173_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        cos_coefficients_tab_ce0 = 1'b1;
    end else begin
        cos_coefficients_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12))) begin
        dft_imag_ce0 = 1'b1;
    end else begin
        dft_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dft_imag_we0 = 1'b1;
    end else begin
        dft_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state12))) begin
        dft_real_ce0 = 1'b1;
    end else begin
        dft_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        dft_real_we0 = 1'b1;
    end else begin
        dft_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_131_opcode = 2'd1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_131_opcode = 2'd0;
    end else begin
        grp_fu_131_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_131_p0 = dft_real_load_reg_313;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_131_p0 = tmp_2_reg_293;
    end else begin
        grp_fu_131_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_131_p1 = reg_155;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_131_p1 = tmp_3_reg_298;
    end else begin
        grp_fu_131_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_135_p0 = dft_imag_load_reg_318;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_135_p0 = tmp_6_reg_303;
    end else begin
        grp_fu_135_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_fu_135_p1 = reg_161;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_fu_135_p1 = tmp_7_reg_308;
    end else begin
        grp_fu_135_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        imag_sample_ce0 = 1'b1;
    end else begin
        imag_sample_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        real_sample_ce0 = 1'b1;
    end else begin
        real_sample_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        sin_coefficients_tab_ce0 = 1'b1;
    end else begin
        sin_coefficients_tab_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & ~((1'b0 == ap_start) | (ap_done_reg == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (exitcond1_fu_173_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (exitcond_fu_189_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((1'b0 == ap_start) | (ap_done_reg == 1'b1));
end

assign cos_coefficients_tab_address0 = ind_cast_fu_211_p1;

assign dft_imag_address0 = dft_imag_addr_reg_231;

assign dft_imag_d0 = reg_161;

assign dft_real_address0 = dft_real_addr_reg_226;

assign dft_real_d0 = reg_155;

assign exitcond1_fu_173_p2 = ((n_reg_108 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_fu_189_p2 = ((w_reg_120 == 9'd256) ? 1'b1 : 1'b0);

assign imag_sample_address0 = w_cast1_fu_179_p1;

assign ind_cast_fu_211_p1 = ind_fu_205_p2;

assign ind_fu_205_p2 = ($signed(tmp_fu_185_p1) * $signed(tmp_10_fu_201_p1));

assign n_1_fu_217_p2 = (n_reg_108 + 9'd1);

assign n_cast1_fu_167_p1 = n_reg_108;

assign real_sample_address0 = w_cast1_fu_179_p1;

assign sin_coefficients_tab_address0 = ind_cast_fu_211_p1;

assign tmp_10_fu_201_p1 = n_reg_108[7:0];

assign tmp_fu_185_p1 = w_reg_120[7:0];

assign w_2_fu_195_p2 = (9'd1 + w_reg_120);

assign w_cast1_fu_179_p1 = w_reg_120;

endmodule //dft2
